Compilation begin on 2018-06-03 14:56:47 

program : (
	('def', 'factor', ['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))
	('echo', '"Debut programme"')
	('echo', ('+', '"factor(3) = "', ('call', 'factor', [3])))
	('~', 'Comment1 comment2 inline_comment')
	('echo', ('+', '"factor(5) = "', ('call', 'factor', [5])))
	('~', 'Comment on a second line')
	('echo', '"Fin programme"')
)
Statement number 1 :
functions : {
}
function_stack : [
	{},
]

	Evaluation : ('def', 'factor', ['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))) : function added to scope 



Statement number 2 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
]

	Evaluation : ('echo', '"Debut programme"') : echo executed 



Statement number 4 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 3},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 6 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 3},
	{'val': 2},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 9 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 3},
	{'val': 2},
	{'val': 1},
]

	Evaluation : ('return', 1) : 1 



Statement number 8 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 3},
	{'val': 2},
	{'val': 1},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : 1 



Statement number 7 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 3},
	{'val': 2},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 2 



Statement number 5 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 3},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 6 



Statement number 3 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
]

	Evaluation : ('echo', ('+', '"factor(3) = "', ('call', 'factor', [3]))) : echo executed 



Statement number 10 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
]

	Evaluation : ('~', 'Comment1 comment2 inline_comment') : Ignoring inline comment 



Statement number 12 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 5},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 14 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 5},
	{'val': 4},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 16 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 5},
	{'val': 4},
	{'val': 3},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 18 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 5},
	{'val': 4},
	{'val': 3},
	{'val': 2},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 21 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 5},
	{'val': 4},
	{'val': 3},
	{'val': 2},
	{'val': 1},
]

	Evaluation : ('return', 1) : 1 



Statement number 20 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 5},
	{'val': 4},
	{'val': 3},
	{'val': 2},
	{'val': 1},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : 1 



Statement number 19 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 5},
	{'val': 4},
	{'val': 3},
	{'val': 2},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 2 



Statement number 17 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 5},
	{'val': 4},
	{'val': 3},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 6 



Statement number 15 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 5},
	{'val': 4},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 24 



Statement number 13 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'val': 5},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 120 



Statement number 11 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
]

	Evaluation : ('echo', ('+', '"factor(5) = "', ('call', 'factor', [5]))) : echo executed 



Statement number 22 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
]

	Evaluation : ('~', 'Comment on a second line') : Ignoring inline comment 



Statement number 23 :
functions : {
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
]

	Evaluation : ('echo', '"Fin programme"') : echo executed 



Compilation executed in 0.0305 seconds
