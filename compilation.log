Compilation begin on 2018-06-06 20:37:10 

program : (
	('import', '"samples/code7.vincent"')
	('call', 'printer', ['"Begin program"'])
	('echo', ('+', '"factor(5) : "', ('call', 'factor', [5])))
	('=', 'temp', ('input',))
	('echo', ('+', '"Text entered by user : "', 'temp'))
	('call', 'printer', ['"End program"'])
)
Statement number 1 :
functions : {
}
function_stack : [
	{},
	{},
]

	Evaluation : ('import', '"samples/code7.vincent"') : File 'samples/code7.vincent''s functions imported 



Statement number 3 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
	{'var': 'Begin program'},
]

	Evaluation : ('echo', 'var') : echo executed 



Statement number 4 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
	{'var': 'Begin program'},
]

	Evaluation : ('~', 'Random inline comment') : Ignoring inline comment 



Statement number 2 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
]

	Evaluation : ('call', 'printer', ['"Begin program"']) : None 



Statement number 6 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
	{'val': 5},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 8 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
	{'val': 5},
	{'val': 4},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 10 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
	{'val': 5},
	{'val': 4},
	{'val': 3},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 12 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
	{'val': 5},
	{'val': 4},
	{'val': 3},
	{'val': 2},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 15 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
	{'val': 5},
	{'val': 4},
	{'val': 3},
	{'val': 2},
	{'val': 1},
]

	Evaluation : ('return', 1) : 1 



Statement number 14 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
	{'val': 5},
	{'val': 4},
	{'val': 3},
	{'val': 2},
	{'val': 1},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : 1 



Statement number 13 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
	{'val': 5},
	{'val': 4},
	{'val': 3},
	{'val': 2},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 2 



Statement number 11 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
	{'val': 5},
	{'val': 4},
	{'val': 3},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 6 



Statement number 9 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
	{'val': 5},
	{'val': 4},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 24 



Statement number 7 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
	{'val': 5},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 120 



Statement number 5 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
]

	Evaluation : ('echo', ('+', '"factor(5) : "', ('call', 'factor', [5]))) : echo executed 



Statement number 16 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{},
]

	Evaluation : ('=', 'temp', ('input',)) : temp <--- test1 



Statement number 17 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'temp': 'test1'},
]

	Evaluation : ('echo', ('+', '"Text entered by user : "', 'temp')) : echo executed 



Statement number 19 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'temp': 'test1'},
	{'var': 'End program'},
]

	Evaluation : ('echo', 'var') : echo executed 



Statement number 20 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'temp': 'test1'},
	{'var': 'End program'},
]

	Evaluation : ('~', 'Random inline comment') : Ignoring inline comment 



Statement number 18 :
functions : {
	printer : (['var'], (('echo', 'var'), (('~', 'Random inline comment'), ()))),
	factor : (['val'], (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))),
}
function_stack : [
	{},
	{'temp': 'test1'},
]

	Evaluation : ('call', 'printer', ['"End program"']) : None 



Compilation executed in 2.3883 seconds
