Compilation begin on 2018-06-06 19:39:23 

program : (
	('def', 'factor', ['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ()))))
	('global', 'gbl_var1')
	('global', 'gbl_var2', 5)
	('global', 'gbl_var3', "'TEST'")
	('echo', '"Debut programme"')
	('/~', 'Multi line comment on 1 line')
	('=', 'gbl_var1', 3)
	('echo', ('+', ('+', ('+', '"factor("', 'gbl_var1'), '") = "'), ('call', 'factor', ['gbl_var1'])))
	('~', 'Comment1 comment2 inline_comment')
	('echo', ('+', ('+', ('+', '"factor("', 'gbl_var2'), '") = "'), ('call', 'factor', ['gbl_var2'])))
	('~', 'Comment on a second line')
	('/~', 'Multi line comment on several lines into the code')
	('echo', '"Fin programme"')
)
Statement number 1 :
functions : {
}
function_stack : [
	{},
	{},
]

	Evaluation : ('def', 'factor', ['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))) : function added to scope 



Statement number 2 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{},
	{},
]

	Evaluation : ('global', 'gbl_var1') : function added to scope 



Statement number 3 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0},
	{},
]

	Evaluation : ('global', 'gbl_var2', 5) : 5 



Statement number 4 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5},
	{},
]

	Evaluation : ('global', 'gbl_var3', "'TEST'") : TEST 



Statement number 5 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{},
]

	Evaluation : ('echo', '"Debut programme"') : echo executed 



Statement number 6 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{},
]

	Evaluation : ('/~', 'Multi line comment on 1 line') : Ignoring multi line comment 



Statement number 7 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{},
]

	Evaluation : ('=', 'gbl_var1', 3) : gbl_var1 <--- 3 



Statement number 9 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 3},
]

	Evaluation : ('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')) : echo executed 



Statement number 10 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 3},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 12 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 3},
	{'val': 2},
]

	Evaluation : ('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')) : echo executed 



Statement number 13 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 3},
	{'val': 2},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 15 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 3},
	{'val': 2},
	{'val': 1},
]

	Evaluation : ('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')) : echo executed 



Statement number 17 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 3},
	{'val': 2},
	{'val': 1},
]

	Evaluation : ('return', 1) : 1 



Statement number 16 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 3},
	{'val': 2},
	{'val': 1},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : 1 



Statement number 14 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 3},
	{'val': 2},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 2 



Statement number 11 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 3},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 6 



Statement number 8 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
]

	Evaluation : ('echo', ('+', ('+', ('+', '"factor("', 'gbl_var1'), '") = "'), ('call', 'factor', ['gbl_var1']))) : echo executed 



Statement number 18 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
]

	Evaluation : ('~', 'Comment1 comment2 inline_comment') : Ignoring inline comment 



Statement number 20 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
]

	Evaluation : ('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')) : echo executed 



Statement number 21 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 23 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
	{'val': 4},
]

	Evaluation : ('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')) : echo executed 



Statement number 24 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
	{'val': 4},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 26 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
	{'val': 4},
	{'val': 3},
]

	Evaluation : ('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')) : echo executed 



Statement number 27 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
	{'val': 4},
	{'val': 3},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 29 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
	{'val': 4},
	{'val': 3},
	{'val': 2},
]

	Evaluation : ('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')) : echo executed 



Statement number 30 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
	{'val': 4},
	{'val': 3},
	{'val': 2},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : Condition in if was False 



Statement number 32 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
	{'val': 4},
	{'val': 3},
	{'val': 2},
	{'val': 1},
]

	Evaluation : ('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')) : echo executed 



Statement number 34 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
	{'val': 4},
	{'val': 3},
	{'val': 2},
	{'val': 1},
]

	Evaluation : ('return', 1) : 1 



Statement number 33 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
	{'val': 4},
	{'val': 3},
	{'val': 2},
	{'val': 1},
]

	Evaluation : ('if', ('==', 'val', 1), (('return', 1), ())) : 1 



Statement number 31 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
	{'val': 4},
	{'val': 3},
	{'val': 2},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 2 



Statement number 28 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
	{'val': 4},
	{'val': 3},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 6 



Statement number 25 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
	{'val': 4},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 24 



Statement number 22 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
	{'val': 5},
]

	Evaluation : ('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))) : 120 



Statement number 19 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
]

	Evaluation : ('echo', ('+', ('+', ('+', '"factor("', 'gbl_var2'), '") = "'), ('call', 'factor', ['gbl_var2']))) : echo executed 



Statement number 35 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
]

	Evaluation : ('~', 'Comment on a second line') : Ignoring inline comment 



Statement number 36 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
]

	Evaluation : ('/~', 'Multi line comment on several lines into the code') : Ignoring multi line comment 



Statement number 37 :
functions : {
	factor : (['val'], (('echo', ('+', ('+', 'gbl_var3', '" "'), 'val')), (('if', ('==', 'val', 1), (('return', 1), ())), (('return', ('*', 'val', ('call', 'factor', [('-', 'val', 1)]))), ())))),
}
function_stack : [
	{'gbl_var1': 0, 'gbl_var2': 5, 'gbl_var3': 'TEST'},
	{'gbl_var1': 3},
]

	Evaluation : ('echo', '"Fin programme"') : echo executed 



Compilation executed in 0.0511 seconds
